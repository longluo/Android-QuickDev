<resources>
    <string name="app_name">Quick Dev</string>
    <string name="action_settings">Settings</string>

    <string name="nav_open">Open</string>
    <string name="nav_close">Close</string>

    <string-array name="navigation_drawer_items_array" >
        <item>01</item>
        <item>02</item>
        <item>03</item>
    </string-array>
    
    <string name="jump_code" translatable="false">jump(JumpActivity.class, new Parameter()\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.put(\"参数1\", \"这是一段文字参数\")\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.put(\"参数2\", BitmapFactory.decodeResource(getResources(), R.mipmap.img_bkg))\n );</string>
    <string name="response_code" translatable="false">jump(ResponseActivity.class, new OnJumpResponseListener() {\n&#160;&#160;&#160;&#160;@Override\n&#160;&#160;&#160;&#160;public void OnResponse(Parameter jumpParameter) {\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (jumpParameter==null){\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;toast(\"未返回任何数据\");\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}else{\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;toast(\"收到返回数据，参数“返回数据1”中的值为：\" + jumpParameter.get(\"返回数据1\"));\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}\n&#160;&#160;&#160;&#160;}\n });</string>
    <string name="jump_get_code" translatable="false">String parameter1 = (String) getParameter().get(\"参数1\"); \nif (!isNull(parameter1)) txtP1.setText(\"第一个参数读取到的值为：\" + parameter1); \nBitmap parameter2 = (Bitmap) getParameter().get(\"参数2\"); \nif (parameter2 != null) imgP2.setImageBitmap(parameter2);</string>
    <string name="response_set_code" translatable="false">if ((boolean) getParameter().get(\"needResponse\") == true) {\n&#160;&#160;&#160;&#160;setResponse(new Parameter().put(\"返回数据1\", \"测试成功\")); \n} </string>
    <string name="welcome_github" translatable="false"><![CDATA[欢迎Star&Fork！]]></string>
    <string name="adapter_simple_map" translatable="false">List&lt;Map&lt;String,&#160;Object&gt;&gt;&#160;datas&#160;=&#160;new&#160;ArrayList&lt;&gt;();\nMap&lt;String,&#160;Object&gt;&#160;map&#160;=&#160;new&#160;HashMap&lt;&gt;();\nmap.put("title",&#160;"我是布局1");\ndatas.add(map);\nmap&#160;=&#160;new&#160;HashMap&lt;&gt;();\nmap.put("title",&#160;"我是布局2");\ndatas.add(map);\nmap&#160;=&#160;new&#160;HashMap&lt;&gt;();\nmap.put("title",&#160;"我是布局3");\ndatas.add(map);\nbaseAdapter&#160;=&#160;new&#160;BaseAdapter(me,&#160;datas,&#160;R.layout.item_list_layout1,&#160;new&#160;SimpleMapAdapterSettings()&#160;{\n&#160;&#160;&#160;&#160;@Override\n&#160;&#160;&#160;&#160;public&#160;Object&#160;setViewHolder(View&#160;convertView)&#160;{\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ViewHolder1&#160;viewHolder1&#160;=&#160;new&#160;ViewHolder1();\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;viewHolder1.txtTitle&#160;=&#160;convertView.findViewById(R.id.txt_title);\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return&#160;viewHolder1;\n&#160;&#160;&#160;&#160;}\n&#160;&#160;&#160;&#160;\n&#160;&#160;&#160;&#160;@Override\n&#160;&#160;&#160;&#160;public&#160;void&#160;setData(Object&#160;viewHolder,&#160;Map&lt;String,&#160;Object&gt;&#160;data)&#160;{\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ViewHolder1&#160;viewHolder1&#160;=&#160;(ViewHolder1)&#160;viewHolder;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;viewHolder1.txtTitle.setText(data.get("title")&#160;+&#160;"");\n&#160;&#160;&#160;&#160;}\n});\nlist.setAdapter(baseAdapter);</string>
    <string name="adapter_simple_bean" translatable="false">List&lt;CustomDatas&gt;&#160;datas&#160;=&#160;new&#160;ArrayList();\ndatas.add(new&#160;CustomDatas().setTitle("我是布局1"));\ndatas.add(new&#160;CustomDatas().setTitle("我是布局2"));\ndatas.add(new&#160;CustomDatas().setTitle("我是布局3"));\nbaseAdapter&#160;=&#160;new&#160;BaseAdapter(me,&#160;datas,&#160;R.layout.item_list_layout1,&#160;new&#160;SimpleAdapterSettings()&#160;{\n&#160;&#160;&#160;&#160;@Override\n&#160;&#160;&#160;&#160;public&#160;Object&#160;setViewHolder(View&#160;convertView)&#160;{\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ViewHolder1&#160;viewHolder1&#160;=&#160;new&#160;ViewHolder1();\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;viewHolder1.txtTitle&#160;=&#160;convertView.findViewById(R.id.txt_title);\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return&#160;viewHolder1;\n&#160;&#160;&#160;&#160;}\n&#160;&#160;&#160;&#160;\n&#160;&#160;&#160;&#160;@Override\n&#160;&#160;&#160;&#160;public&#160;void&#160;setData(Object&#160;viewHolder,&#160;BaseAdapter.BaseDataBean&#160;dataBean)&#160;{\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CustomDatas&#160;data&#160;=&#160;(CustomDatas)&#160;dataBean;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ViewHolder1&#160;viewHolder1&#160;=&#160;(ViewHolder1)&#160;viewHolder;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;viewHolder1.txtTitle.setText(data.getTitle());\n&#160;&#160;&#160;&#160;}\n});\nlist.setAdapter(baseAdapter);</string>
    <string name="adapter_multiple_map" translatable="false">List&lt;Map&lt;String,&#160;Object&gt;&gt;&#160;datas&#160;=&#160;new&#160;ArrayList&lt;&gt;();\nMap&lt;String,&#160;Object&gt;&#160;map&#160;=&#160;new&#160;HashMap&lt;&gt;();\nmap.put("type",&#160;0);\nmap.put("title",&#160;"我是布局1");\ndatas.add(map);\nmap&#160;=&#160;new&#160;HashMap&lt;&gt;();\nmap.put("type",&#160;1);\nmap.put("title",&#160;"我是布局2");\ndatas.add(map);\nmap&#160;=&#160;new&#160;HashMap&lt;&gt;();\nmap.put("type",&#160;2);\nmap.put("title",&#160;"我是布局3");\ndatas.add(map);\nMap&lt;Integer,&#160;Integer&gt;&#160;layoutResIdMap&#160;=&#160;new&#160;HashMap&lt;&gt;();\nlayoutResIdMap.put(0,&#160;R.layout.item_list_layout1);\nlayoutResIdMap.put(1,&#160;R.layout.item_list_layout2);\nlayoutResIdMap.put(2,&#160;R.layout.item_list_layout3);\nbaseAdapter&#160;=&#160;new&#160;BaseAdapter(me,&#160;datas,&#160;layoutResIdMap,&#160;new&#160;MultipleMapAdapterSettings()&#160;{\n&#160;&#160;&#160;&#160;@Override\n&#160;&#160;&#160;&#160;public&#160;Object&#160;setViewHolder(int&#160;type,&#160;View&#160;convertView)&#160;{\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;switch&#160;(type)&#160;{\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case&#160;0:\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ViewHolder1&#160;viewHolder1&#160;=&#160;new&#160;ViewHolder1();\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;viewHolder1.txtTitle&#160;=&#160;convertView.findViewById(R.id.txt_title);\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return&#160;viewHolder1;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case&#160;1:\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ViewHolder2&#160;viewHolder2&#160;=&#160;new&#160;ViewHolder2();\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;viewHolder2.txtTitle&#160;=&#160;convertView.findViewById(R.id.txt_title);\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return&#160;viewHolder2;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case&#160;2:\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ViewHolder3&#160;viewHolder3&#160;=&#160;new&#160;ViewHolder3();\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;viewHolder3.txtTitle&#160;=&#160;convertView.findViewById(R.id.txt_title);\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return&#160;viewHolder3;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;default:\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return&#160;null;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}\n&#160;&#160;&#160;&#160;}\n&#160;&#160;&#160;&#160;\n&#160;&#160;&#160;&#160;@Override\n&#160;&#160;&#160;&#160;public&#160;void&#160;setData(int&#160;type,&#160;Object&#160;viewHolder,&#160;Map&lt;String,&#160;Object&gt;&#160;data)&#160;{\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;switch&#160;(type)&#160;{\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case&#160;0:\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ViewHolder1&#160;viewHolder1&#160;=&#160;(ViewHolder1)&#160;viewHolder;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;viewHolder1.txtTitle.setText((String)&#160;data.get("title"));\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case&#160;1:\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ViewHolder2&#160;viewHolder2&#160;=&#160;(ViewHolder2)&#160;viewHolder;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;viewHolder2.txtTitle.setText((String)&#160;data.get("title"));\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case&#160;2:\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ViewHolder3&#160;viewHolder3&#160;=&#160;(ViewHolder3)&#160;viewHolder;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;viewHolder3.txtTitle.setText((String)&#160;data.get("title"));\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}\n&#160;&#160;&#160;&#160;}\n});\nlist.setAdapter(baseAdapter);</string>
    <string name="adapter_multiple_bean" translatable="false">List&lt;CustomDatas&gt;&#160;datas&#160;=&#160;new&#160;ArrayList();\ndatas.add(new&#160;CustomDatas().setTitle("我是布局1").setType(0));\ndatas.add(new&#160;CustomDatas().setTitle("我是布局2").setType(1));\ndatas.add(new&#160;CustomDatas().setTitle("我是布局3").setType(2));\nMap&lt;Integer,&#160;Integer&gt;&#160;layoutResIdMap&#160;=&#160;new&#160;HashMap&lt;&gt;();\nlayoutResIdMap.put(0,&#160;R.layout.item_list_layout1);\nlayoutResIdMap.put(1,&#160;R.layout.item_list_layout2);\nlayoutResIdMap.put(2,&#160;R.layout.item_list_layout3);\nbaseAdapter&#160;=&#160;new&#160;BaseAdapter(me,&#160;datas,&#160;layoutResIdMap,&#160;new&#160;MultipleAdapterSettings()&#160;{\n&#160;&#160;&#160;&#160;@Override\n&#160;&#160;&#160;&#160;public&#160;Object&#160;setViewHolder(int&#160;type,&#160;View&#160;convertView)&#160;{\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;switch&#160;(type)&#160;{\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case&#160;0:\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ViewHolder1&#160;viewHolder1&#160;=&#160;new&#160;ViewHolder1();\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;viewHolder1.txtTitle&#160;=&#160;convertView.findViewById(R.id.txt_title);\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return&#160;viewHolder1;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case&#160;1:\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ViewHolder2&#160;viewHolder2&#160;=&#160;new&#160;ViewHolder2();\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;viewHolder2.txtTitle&#160;=&#160;convertView.findViewById(R.id.txt_title);\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return&#160;viewHolder2;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case&#160;2:\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ViewHolder3&#160;viewHolder3&#160;=&#160;new&#160;ViewHolder3();\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;viewHolder3.txtTitle&#160;=&#160;convertView.findViewById(R.id.txt_title);\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return&#160;viewHolder3;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;default:\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return&#160;null;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}\n&#160;&#160;&#160;&#160;}\n&#160;&#160;&#160;&#160;\n&#160;&#160;&#160;&#160;@Override\n&#160;&#160;&#160;&#160;public&#160;void&#160;setData(int&#160;type,&#160;Object&#160;viewHolder,&#160;BaseAdapter.BaseDataBean&#160;dataBean)&#160;{\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CustomDatas&#160;data&#160;=&#160;(CustomDatas)&#160;dataBean;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;switch&#160;(type)&#160;{\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case&#160;0:\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ViewHolder1&#160;viewHolder1&#160;=&#160;(ViewHolder1)&#160;viewHolder;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;viewHolder1.txtTitle.setText(data.getTitle());\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case&#160;1:\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ViewHolder2&#160;viewHolder2&#160;=&#160;(ViewHolder2)&#160;viewHolder;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;viewHolder2.txtTitle.setText(data.getTitle());\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case&#160;2:\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ViewHolder3&#160;viewHolder3&#160;=&#160;(ViewHolder3)&#160;viewHolder;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;viewHolder3.txtTitle.setText(data.getTitle());\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}\n&#160;&#160;&#160;&#160;}\n});\nlist.setAdapter(baseAdapter);</string>
    <string name="btn_change_lng">切换为英语（本按钮文字会变）</string>

    <string name="introduction">简介</string>
    <string name="viewOnGithub">访问BaseFramework官方Github</string>
    <string name="introduction_tip">BaseFramework框架包含沉浸式适配、对 Activity、Fragment 以及 Adapter 的封装，并提供了一些诸如权限申请、跳转、延时操作、提示、日志输出等小工具，以方便快速构建 Android App；</string>

    <string name="other">其他功能</string>
    <string name="menu">功能目录</string>
    <string name="menu_tip">· BaseActivity功能\n···· 沉浸式\n···· 跳转、Activity间通讯\n···· 更简单的跳转后返回数据\n···· 权限申请\n···· BaseActivity提供的小工具\n···· BaseActivity的生命周期\n···· 侧滑返回\n· BaseFragment功能\n···· BaseFragment 是什么\n···· FragmentChangeUtil\n· 设置、属性值的存储工具 Preferences\n· AppManager\n· 异步或同步（演示操作）\n· BaseAdapter\n···· JavaBean 适配方式\n···· Map 适配方式\n···· 多种布局的绑定方式\n···· 数据刷新方法\n· 增强型日志\n· 行为与日志监听\n· 语言变更工具</string>
    <string name="license">开源协议</string>
    <string name="license_tip">Copyright BaseFramework\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</string>
    <string name="function">功能</string>
    <string name="about">关于</string>
    <string name="github">Github</string>


</resources>